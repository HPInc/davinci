"use strict";(self.webpackChunk_davinci_docs=self.webpackChunk_davinci_docs||[]).push([[643],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(r),h=a,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||o;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1415:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={},l="Getting Started",i={unversionedId:"graphql/getting-started",id:"graphql/getting-started",title:"Getting Started",description:"Installation",source:"@site/docs/graphql/getting-started.md",sourceDirName:"graphql",slug:"/graphql/getting-started",permalink:"/davinci/docs/2.0.0/graphql/getting-started",draft:!1,tags:[],version:"current",frontMatter:{}},p={},s=[{value:"Installation",id:"installation",level:2},{value:"Start shaping the GraphQL API",id:"start-shaping-the-graphql-api",level:2},{value:"Create a controller",id:"create-a-controller",level:3},{value:"Create the main file",id:"create-the-main-file",level:3},{value:"Start the app",id:"start-the-app",level:3}],c={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save @davinci/graphql\n")),(0,a.kt)("p",null,"or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @davinci/graphql\n")),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"start-shaping-the-graphql-api"},"Start shaping the GraphQL API"),(0,a.kt)("p",null,"Implement query, mutations and its resolvers declaratively, using classes and decorators."),(0,a.kt)("h3",{id:"create-a-controller"},"Create a controller"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"// file: ./AuthorController.ts\nimport { graphql } from '@davinci/graphql';\nimport { context } from '@davinci/core';\nimport model from './AuthorModel';\nimport AuthorSchema, { AuthorQuery } from './AuthorSchema';\nimport { BookSchema } from '../book';\n\nconst { query, parent, mutation, fieldResolver, arg } = graphql;\n\nexport default class AuthorController {\n    model = model;\n\n    @query(AuthorSchema, 'authorById')\n    getAuthorById(@arg({ required: true }) id: string) {\n        return this.model.findById(id);\n    }\n\n    @query([AuthorSchema], 'authors')\n    findAuthors(@arg() query: AuthorQuery, @context() context: any) {\n        return this.model.find(query, {}, { context });\n    }\n\n    @mutation(AuthorSchema)\n    createAuthor(@arg({ required: true }) data: AuthorSchema) {\n        return this.model.create(data);\n    }\n\n    @mutation(AuthorSchema)\n    updateAuthorById(@arg({ required: true }) id: string, @arg({ required: true }) data: AuthorSchema) {\n        return this.model.findByIdAndUpdate(id, data, { new: true });\n    }\n\n    @fieldResolver<BookSchema>(BookSchema, 'authors', [AuthorSchema])\n    getBookAuthors(@parent() book: BookSchema, @arg() query: AuthorQuery, @context() context: any) {\n        console.log(query);\n        // @ts-ignore\n        return this.findAuthors({ ...query, _id: { $in: book.authorIds } }, context);\n    }\n}\n")),(0,a.kt)("h3",{id:"create-the-main-file"},"Create the main file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"// file: ./index.ts\nimport express, { Express } from 'express';\nimport { createApp, DaVinciExpress } from '@davinci/core';\nimport { createGraphQLServer } from '@davinci/graphql';\nimport { BookController, AuthorController } from './api';\n\nconst options = {\n    boot: {\n        dirPath: './build/examples/crm/boot'\n    },\n    healthChecks: {\n        readynessEndpoint: '/.ah/ready',\n        livenessEndpoint: '/.ah/live'\n    }\n};\n\nconst expressApp: Express = express();\n\ncreateApp(expressApp, options, app => {\n    createGraphQLServer(app, [BookController, AuthorController]);\n});\n\nif (require.main === module) {\n    // this module was run directly from the command line as in node xxx.js\n    (expressApp as DaVinciExpress).start();\n}\n\nexport default expressApp;\n")),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"start-the-app"},"Start the app"),(0,a.kt)("p",null,"In your terminal, run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ts-node ./index.ts\n")),(0,a.kt)("p",null,"The app is now serving requests at ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3000"},"http://localhost:3000")),(0,a.kt)("p",null,"Additionally, a swagger UI is served at ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:3000/explorer"},"http://localhost:3000/explorer")))}u.isMDXComponent=!0}}]);
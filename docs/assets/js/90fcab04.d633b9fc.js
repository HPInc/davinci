"use strict";(self.webpackChunk_davinci_docs=self.webpackChunk_davinci_docs||[]).push([[943],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=o,h=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(h,a(a({ref:n},l),{},{components:t})):r.createElement(h,a({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5104:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const i={},a="OpenAPI Definitions",s={unversionedId:"basics/openapi-definitions",id:"version-0.x/basics/openapi-definitions",title:"OpenAPI Definitions",description:"Add schemas",source:"@site/versioned_docs/version-0.x/basics/openapi-definitions.md",sourceDirName:"basics",slug:"/basics/openapi-definitions",permalink:"/docs/0.x/basics/openapi-definitions",draft:!1,tags:[],version:"0.x",frontMatter:{},sidebar:"mySidebar",previous:{title:"Controllers",permalink:"/docs/0.x/basics/controllers"},next:{title:"Swagger UI",permalink:"/docs/0.x/basics/swagger-ui"}},p={},c=[{value:"Add schemas",id:"add-schemas",level:2},{value:"Create a Customer schema",id:"create-a-customer-schema",level:4},{value:"Add it to the controller method",id:"add-it-to-the-controller-method",level:3}],l={toc:c};function m(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"openapi-definitions"},"OpenAPI Definitions"),(0,o.kt)("h2",{id:"add-schemas"},"Add schemas"),(0,o.kt)("h4",{id:"create-a-customer-schema"},"Create a Customer schema"),(0,o.kt)("p",null,"Let's write the schema for the customer"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// file: ./CustomerSchema.ts\nimport { openapi } from '@davinci/core';\n\nclass CustomerPhone {\n    @openapi.prop()\n    number: string;\n\n    @openapi.prop()\n    isPrimary: boolean;\n}\n\n@openapi.definition({ title: 'BirthType' })\nclass BirthType {\n    @openapi.prop()\n    city: string;\n}\n\n@openapi.definition({ title: 'Customer' })\nexport class Customer {\n    @openapi.prop({ required: true })\n    firstname: string;\n\n    @openapi.prop({ required: true })\n    lastname: string;\n\n    // IMPORTANT: arrays must be annotated using explicit type\n    @openapi.prop({ type: [CustomerPhone] })\n    phones: CustomerPhone[];\n\n    @openapi.prop()\n    birth: BirthType;\n}\n")),(0,o.kt)("br",null),(0,o.kt)("h3",{id:"add-it-to-the-controller-method"},"Add it to the controller method"),(0,o.kt)("p",null,"Now, we can use it as schema for the payload ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," method on our controller."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript{6}"},"// file: ./CustomerController.ts\nimport { CustomerSchema } from './CustomerSchema';\n\nexport class CustomerController {\n    // ...\n    @route.post({ path: '/create', summary: 'This is a create method' })\n    create(@route.body() data: CustomerSchema) {\n        console.log(data);\n        return { success: true };\n    }\n    // ...\n}\n")),(0,o.kt)("p",null,"The incoming payload of the API request will be validated using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/epoberezkin/ajv"},"Ajv"),"\nagainst the supplied CustomerSchema schema"),(0,o.kt)("p",null,"The resulting openapi schema will be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "paths": {\n        "/api/customers": {\n            "post": {\n                "summary": "This is a create method",\n                "operationId": "create",\n                "parameters": [\n                    {\n                        "in": "body",\n                        "name": "data",\n                        "schema": { "$ref": "#/definitions/Customer" }\n                    }\n                ],\n                "responses": { "200": { "schema": { "$ref": "#/definitions/Customer" } } },\n                "consumes": ["application/json"],\n                "produces": ["application/json"],\n                "tags": ["Customer"]\n            }\n        }\n    },\n    "definitions": {\n        "Customer": {\n            "title": "Customer",\n            "type": "object",\n            "properties": {\n                "firstname": { "type": "string" },\n                "lastname": { "type": "string" },\n                "phones": {\n                    "type": "array",\n                    "items": {\n                        "type": "object",\n                        "title": "phones",\n                        "properties": { "number": { "type": "string" }, "isPrimary": { "type": "boolean" } }\n                    }\n                },\n                "accountId": { "type": "number" },\n                "birth": {\n                    "$ref": "#/definitions/BirthType"\n                }\n            },\n            "required": ["firstname", "lastname"]\n        },\n        "BirthType": {\n            "title": "BirthType",\n            "type": "object",\n            "properties": {\n                "city": {\n                    "type": "string"\n                }\n            }\n        }\n    }\n}\n')),(0,o.kt)("p",null,"You may have noticed that a ",(0,o.kt)("inlineCode",{parentName:"p"},"BirthType")," definition is created, because the BirthType class has\nbeen decorated with ",(0,o.kt)("inlineCode",{parentName:"p"},"@openapi.definition()"),", as opposed to ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomerPhone")," that will be defined inline."))}m.isMDXComponent=!0}}]);
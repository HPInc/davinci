version: 2
jobs:
  checkout_and_test:
    docker:
      - image: circleci/node:8-stretch-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-npm-deps-{{ .Branch }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - v2-npm-deps-{{ .Branch }}-{{ checksum "package.json" }}
            - v2-npm-deps-{{ .Branch }}
            - v2-npm-deps-
      - run:
          name: install NPM dependencies
          command: |
            echo -e "//registry.npmjs.org/:_authToken=$NPM_TOKEN\nscope=@oneflow" > .npmrc
            npm install
      - save_cache:
          key: v2-npm-deps-{{ .Branch }}-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: test
          command: |
           npm run test
      - run:
          name: upload coverage report
          command: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN
      - run:
          name: build
          command: |
            npm run build
      - save_cache:
          key: v1-source-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~

  publish:
    docker:
      - image: circleci/node:8-stretch
    steps:
      - setup_remote_docker
      - restore_cache:
          key: v1-source-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: publish
          command: |
            npm publish

  bump_version:
    docker:
      - image: circleci/node:8-stretch
    steps:
      - restore_cache:
          key: v1-source-{{ .Environment.CIRCLE_SHA1 }}
      - add_ssh_keys
      - run:
          name: Add github to known_hosts
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: tag and patch version
          command: |
            git config --global user.email "circleci@oneflowsystems.com"
            git config --global user.name "Circle CI"
            git reset --hard HEAD
            git tag "v`grep '"version"' package.json | egrep -o "[0-9]+.[0-9]+.[0-9]+"`"
            git push --tags
            # checkout development and bump the version
            git checkout -b circle-ci-version-bump origin/development
            git pull
            npm --no-git-tag-version version patch
            git add package.json package-lock.json
            git commit -m "`grep '"version"' package.json | egrep -o "[0-9]+.[0-9]+.[0-9]+"`"
            git push -u origin circle-ci-version-bump:development --follow-tags
            # checkout master again and delete our local branch
            git checkout master
            git branch -D circle-ci-version-bump

workflows:
  version: 2
  build_and_publish:
    jobs:
      - checkout_and_test:
          context: oneflow
      - publish:
          context: oneflow
          requires:
            - checkout_and_test
          filters:
            branches:
              only:
                - master
      - bump_version:
          context: oneflow
          requires:
            - publish
          filters:
            branches:
              only: master

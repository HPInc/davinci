"use strict";(self.webpackChunk_davinci_docs=self.webpackChunk_davinci_docs||[]).push([[46],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,h=c(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,m=u["".concat(l,".").concat(d)]||u[d]||p[d]||a;return n?r.createElement(m,i(i({ref:t},h),{},{components:n})):r.createElement(m,i({ref:t},h))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8018:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={},i="Health Checks",c={unversionedId:"modules/health-checks/health-checks",id:"modules/health-checks/health-checks",title:"Health Checks",description:"The Health Checks module provides integration with Terminus, allowing to register health indicators within your app.",source:"@site/docs/modules/health-checks/health-checks.md",sourceDirName:"modules/health-checks",slug:"/modules/health-checks/",permalink:"/davinci/docs/2.x/modules/health-checks/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Mongoose",permalink:"/davinci/docs/2.x/modules/mongoose/"},next:{title:"Interceptors",permalink:"/davinci/docs/2.x/interceptors"}},l={},s=[{value:"Installation",id:"installation",level:2},{value:"Register the module",id:"register-the-module",level:2},{value:"Register a new health check",id:"register-a-new-health-check",level:2}],h={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"health-checks"},"Health Checks"),(0,o.kt)("p",null,"The Health Checks module provides integration with Terminus, allowing to register health indicators within your app."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save @davinci/health-checks @godaddy/terminus\n")),(0,o.kt)("h2",{id:"register-the-module"},"Register the module"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},"import { createApp } from '@davinci/core';\nimport { ExpressHttpServer } from '@davinci/http-server-express';\n+import { OpenAPIModule } from '@davinci/health-checks';\n\nconst app = createApp();\n\napp.registerModule(\n    new ExpressHttpServer(),\n+   new HealthChecksModule({\n+       healthChecks: [\n+           { name: 'liveness', endpoint: '/.ah/live' },\n+           { name: 'readiness', endpoint: '/.ah/ready' }\n+       ]\n+   }),\n);\n\nif (require.main === module) {\n    app.init();\n}\n\nexport default app;\n\n")),(0,o.kt)("h2",{id:"register-a-new-health-check"},"Register a new health check"),(0,o.kt)("p",null,"Health check hooks are registered via the ",(0,o.kt)("inlineCode",{parentName:"p"},"healthCheck()")," decorator, that can be applied both to Modules and Controller methods."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { route } from '@davinci/http-server';\nimport { Customer } from './customer.schema';\nimport { healthCheck } from '@davinci/health-checks';\n\n@route.controller({\n    basePath: '/api/customers'\n})\nexport default class CustomerController {\n    [...]\n\n    @healthCheck('readiness')\n    @healthCheck('liveness')\n    checkMongo() {\n        if(mongoose.connection.readyState !== 1) {\n            throw new Error('Mongodb client not connected')\n        }\n        \n        return { mongooseConnected: true };\n    }\n}\n")))}p.isMDXComponent=!0}}]);